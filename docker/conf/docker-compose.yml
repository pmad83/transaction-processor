services:

  transaction-app:
    image: pmad83/transaction-app:1.3.0
    build:
      context: ../../transaction-app
      dockerfile: Dockerfile
    container_name: transaction-app
    networks:
      - transaction-processor-network
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8080:8080"
    volumes:
      - transactionapp-data:/app

  kafka:
    image: 'bitnami/kafka:3.3.2'
    container_name: kafka
    networks:
      - transaction-processor-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: always
    networks:
      - transaction-processor-network
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka

networks:
  transaction-processor-network:

volumes:
  transactionapp-data:
